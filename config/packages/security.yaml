security:
    # Encodage des mots de passe
    password_hashers:
        App\Entity\PersonneLogin:
            algorithm: auto

    # Chargement des utilisateurs depuis la base de données
    providers:
        app_user_provider:
            entity:
                class: App\Entity\PersonneLogin
                property: login

    firewalls:
        # Pas de sécurité pour les ressources de dev
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall principal
        main:
            lazy: true
            custom_authenticator: App\Security\AppAuthenticator

            logout:
                path: app_logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # always_remember_me: true


        # Firewall pour EasyAdmin
        easy_admin:
            pattern: ^/admin
            security: true
            form_login:
                login_path: login
                check_path: login
            logout:
                path: app_logout
                target: home

    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_ADMIN: [ROLE_INFIRMIERE, ROLE_USER]
        ROLE_INFIRMIERE: [ROLE_USER]
        ROLE_PATIENT: [ROLE_USER]

    # Contrôle d'accès aux URLs
    access_control:
        - { path: ^/admin/login, roles: PUBLIC_ACCESS }  # Permet l'accès à la page de login admin
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/infirmiere, roles: ROLE_INFIRMIERE }
        - { path: ^/patient, roles: ROLE_PATIENT }
        - { path: ^/profil, roles: ROLE_USER }

# Configuration spécifique pour les tests
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
